//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasySave.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EasySave.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add a backupjob.
        /// </summary>
        public static string AddBackJobs {
            get {
                return ResourceManager.GetString("AddBackJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To.
        /// </summary>
        public static string At {
            get {
                return ResourceManager.GetString("At", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BackupJobs manager.
        /// </summary>
        public static string BackupJobManager {
            get {
                return ResourceManager.GetString("BackupJobManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BackupJobs.
        /// </summary>
        public static string BackupJobs {
            get {
                return ResourceManager.GetString("BackupJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backup Type.
        /// </summary>
        public static string BackupType {
            get {
                return ResourceManager.GetString("BackupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Business application.
        /// </summary>
        public static string BusinessApplication {
            get {
                return ResourceManager.GetString("BusinessApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        public static string ButtonCancel {
            get {
                return ResourceManager.GetString("ButtonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Validate.
        /// </summary>
        public static string ButtonValidate {
            get {
                return ResourceManager.GetString("ButtonValidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Complete.
        /// </summary>
        public static string Complete {
            get {
                return ResourceManager.GetString("Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Destination Directory.
        /// </summary>
        public static string DestinationDirectory {
            get {
                return ResourceManager.GetString("DestinationDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Differential.
        /// </summary>
        public static string Differential {
            get {
                return ResourceManager.GetString("Differential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute.
        /// </summary>
        public static string Execute {
            get {
                return ResourceManager.GetString("Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From.
        /// </summary>
        public static string From {
            get {
                return ResourceManager.GetString("From", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum number of Ko to copy a file.
        /// </summary>
        public static string MaxKoToTransfert {
            get {
                return ResourceManager.GetString("MaxKoToTransfert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backup Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the destincation path of backupjob.
        /// </summary>
        public static string PlaceHolderDestinationDirectory {
            get {
                return ResourceManager.GetString("PlaceHolderDestinationDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Write the name of backupjob.
        /// </summary>
        public static string PlaceHolderName {
            get {
                return ResourceManager.GetString("PlaceHolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the source path of backupjob.
        /// </summary>
        public static string PlaceHolderSourceDirectory {
            get {
                return ResourceManager.GetString("PlaceHolderSourceDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the type of backupjob.
        /// </summary>
        public static string PlaceHolderType {
            get {
                return ResourceManager.GetString("PlaceHolderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Current Culture.
        /// </summary>
        public static string SettingCurrentCulture {
            get {
                return ResourceManager.GetString("SettingCurrentCulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extensions to encrypt.
        /// </summary>
        public static string SettingEncryptedFileExtension {
            get {
                return ResourceManager.GetString("SettingEncryptedFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The path of log file.
        /// </summary>
        public static string SettingFileLog {
            get {
                return ResourceManager.GetString("SettingFileLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The path of state file.
        /// </summary>
        public static string SettingFileState {
            get {
                return ResourceManager.GetString("SettingFileState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name of the extension.
        /// </summary>
        public static string SettingNameFileExtension {
            get {
                return ResourceManager.GetString("SettingNameFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Priority extensions.
        /// </summary>
        public static string SettingPrioritizedFileExtension {
            get {
                return ResourceManager.GetString("SettingPrioritizedFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here is the settings page. You can configure different features of the application. You can change the following information in this section:.
        /// </summary>
        public static string SettingsInfo1 {
            get {
                return ResourceManager.GetString("SettingsInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The limit of RAM that the application can use.
        /// </summary>
        public static string SettingsInfo10 {
            get {
                return ResourceManager.GetString("SettingsInfo10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Attention ! When you click on the save button at the bottom of the settings, the application will restart to take these changes into account..
        /// </summary>
        public static string SettingsInfo11 {
            get {
                return ResourceManager.GetString("SettingsInfo11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The location of the backup job status files and the name of the status file.
        /// </summary>
        public static string SettingsInfo2 {
            get {
                return ResourceManager.GetString("SettingsInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The location of log files.
        /// </summary>
        public static string SettingsInfo3 {
            get {
                return ResourceManager.GetString("SettingsInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The type of log files.
        /// </summary>
        public static string SettingsInfo4 {
            get {
                return ResourceManager.GetString("SettingsInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Choice of application language.
        /// </summary>
        public static string SettingsInfo5 {
            get {
                return ResourceManager.GetString("SettingsInfo5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The list of extensions to encrypt.
        /// </summary>
        public static string SettingsInfo6 {
            get {
                return ResourceManager.GetString("SettingsInfo6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The list of extensions to prioritize.
        /// </summary>
        public static string SettingsInfo7 {
            get {
                return ResourceManager.GetString("SettingsInfo7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The name of the business application.
        /// </summary>
        public static string SettingsInfo8 {
            get {
                return ResourceManager.GetString("SettingsInfo8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * The maximum size of a file to copy non-parallel.
        /// </summary>
        public static string SettingsInfo9 {
            get {
                return ResourceManager.GetString("SettingsInfo9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter the name of your business application that will stop backup jobs running when it is in use. At that point, no further backups can be launched..
        /// </summary>
        public static string SettingsInfoBusinessApp {
            get {
                return ResourceManager.GetString("SettingsInfoBusinessApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here you define the list of file types whose contents you wish to encrypt when copied. Enter the extension name (e.g. &apos;txt&apos; for a text file) in the field below, then click the &apos;Add&apos; button. If you wish to remove an extension from the list, click on it and then on the &apos;Remove&apos; button..
        /// </summary>
        public static string SettingsInfoEncrypt {
            get {
                return ResourceManager.GetString("SettingsInfoEncrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use the buttons to select the application language. The change will be applied once the application has been restarted. .
        /// </summary>
        public static string SettingsInfoLanguage {
            get {
                return ResourceManager.GetString("SettingsInfoLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter the location of the backup job logs folder in the field below or click on the &apos;...&apos; to use the file explorer..
        /// </summary>
        public static string SettingsInfoLogs {
            get {
                return ResourceManager.GetString("SettingsInfoLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use the buttons to select the type of file in which the logs will be written. You can choose between JSON and XML..
        /// </summary>
        public static string SettingsInfoLogsFileType {
            get {
                return ResourceManager.GetString("SettingsInfoLogsFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here you define the maximum file size for copying in Kilobytes (Kb). Files of this size will not be copied at the same time, but successively..
        /// </summary>
        public static string SettingsInfoMaxKo {
            get {
                return ResourceManager.GetString("SettingsInfoMaxKo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here, set the maximum value of RAM that the application can use in Mega Bytes (MB). When this value is exceeded, the application limits the number of backup jobs in progress and will not allow any more to be launched..
        /// </summary>
        public static string SettingsInfoMaxMemory {
            get {
                return ResourceManager.GetString("SettingsInfoMaxMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here you define the list of files to be given priority at runtime. Enter the extension name (e.g. &apos;txt&apos; for a text file) in the field below, then click on the &apos;Add&apos; button. If you wish to remove an extension from the list, click on it and then on the &apos;Remove&apos; button..
        /// </summary>
        public static string SettingsInfoPrioritize {
            get {
                return ResourceManager.GetString("SettingsInfoPrioritize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter the location of the backup job status folder in the field below or click on the &apos;...&apos; to use the file explorer. You also have the possibility to change the name of the file which is by default &apos;states&apos;.
        /// </summary>
        public static string SettingsInfoStates {
            get {
                return ResourceManager.GetString("SettingsInfoStates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum RAM that the application can use.
        /// </summary>
        public static string SettingsMaxMemory {
            get {
                return ResourceManager.GetString("SettingsMaxMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Log file extension.
        /// </summary>
        public static string SettingTypeLogFile {
            get {
                return ResourceManager.GetString("SettingTypeLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source Directory.
        /// </summary>
        public static string SourceDirectory {
            get {
                return ResourceManager.GetString("SourceDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à State.
        /// </summary>
        public static string State {
            get {
                return ResourceManager.GetString("State", resourceCulture);
            }
        }
    }
}
