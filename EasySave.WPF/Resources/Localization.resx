<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PlaceHolderName" xml:space="preserve">
    <value>Write the name of backupjob</value>
    <comment>Write the name of backupjob</comment>
  </data>
  <data name="PlaceHolderSourceDirectory" xml:space="preserve">
    <value>Select the source path of backupjob</value>
  </data>
  <data name="PlaceHolderDestinationDirectory" xml:space="preserve">
    <value>Select the destincation path of backupjob</value>
  </data>
  <data name="PlaceHolderType" xml:space="preserve">
    <value>Select the type of backupjob</value>
  </data>
  <data name="ButtonValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Backup Name</value>
  </data>
  <data name="SourceDirectory" xml:space="preserve">
    <value>Source Directory</value>
  </data>
  <data name="DestinationDirectory" xml:space="preserve">
    <value>Destination Directory</value>
  </data>
  <data name="SettingFileLog" xml:space="preserve">
    <value>The path of log file</value>
  </data>
  <data name="SettingFileState" xml:space="preserve">
    <value>The path of state file</value>
  </data>
  <data name="SettingCurrentCulture" xml:space="preserve">
    <value>Current Culture</value>
  </data>
  <data name="SettingTypeLogFile" xml:space="preserve">
    <value>Log file extension</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="At" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="BackupType" xml:space="preserve">
    <value>Backup Type</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="BackupJobs" xml:space="preserve">
    <value>BackupJobs</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="AddBackJobs" xml:space="preserve">
    <value>Add a backupjob</value>
  </data>
  <data name="Differential" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="BackupJobManager" xml:space="preserve">
    <value>BackupJobs manager</value>
  </data>
  <data name="BusinessApplication" xml:space="preserve">
    <value>Business application</value>
  </data>
  <data name="MaxKoToTransfert" xml:space="preserve">
    <value>Maximum number of Ko to copy a file</value>
  </data>
  <data name="SettingEncryptedFileExtension" xml:space="preserve">
    <value>Extensions to encrypt</value>
  </data>
  <data name="SettingNameFileExtension" xml:space="preserve">
    <value>Name of the extension</value>
  </data>
  <data name="SettingPrioritizedFileExtension" xml:space="preserve">
    <value>Priority extensions</value>
  </data>
  <data name="SettingsInfo1" xml:space="preserve">
    <value>Here is the settings page. You can configure different features of the application. You can change the following information in this section:</value>
  </data>
  <data name="SettingsInfo10" xml:space="preserve">
    <value>* The limit of RAM that the application can use</value>
  </data>
  <data name="SettingsInfo11" xml:space="preserve">
    <value>Attention ! When you click on the save button at the bottom of the settings, the application will restart to take these changes into account.</value>
  </data>
  <data name="SettingsInfo2" xml:space="preserve">
    <value>* The location of the backup job status files and the name of the status file</value>
  </data>
  <data name="SettingsInfo3" xml:space="preserve">
    <value>* The location of log files</value>
  </data>
  <data name="SettingsInfo4" xml:space="preserve">
    <value>* The type of log files</value>
  </data>
  <data name="SettingsInfo5" xml:space="preserve">
    <value>* Choice of application language</value>
  </data>
  <data name="SettingsInfo6" xml:space="preserve">
    <value>* The list of extensions to encrypt</value>
  </data>
  <data name="SettingsInfo7" xml:space="preserve">
    <value>* The list of extensions to prioritize</value>
  </data>
  <data name="SettingsInfo8" xml:space="preserve">
    <value>* The name of the business application</value>
  </data>
  <data name="SettingsInfo9" xml:space="preserve">
    <value>* The maximum size of a file to copy non-parallel</value>
  </data>
</root>